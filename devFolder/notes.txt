//Sample HTTP request from browser
Received message from client: GET / HTTP/1.1
Host: localhost:9999
Connection: keep-alive
Cache-Control: max-age=0
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8
Sec-GPC: 1
Accept-Language: en-US,en
Sec-Fetch-Site: none
Sec-Fetch-Mode: navigate
Sec-Fetch-User: ?1
Sec-Fetch-Dest: document
Accept-Encoding: gzip, deflate, br


	void	Server::checkConnections(void)
	{
		int	newSocket;
		int	numEvent;

		while (69)
		{
			//printf("...WAITING FOR NEW CONNECTION...\n");
			newSocket = accept(serverSocket, (struct sockaddr *) &address, (socklen_t *) &addressLen);
			if (newSocket > 0)
				addNewConnection(newSocket);
			numEvent = poll(pollFds.data(), pollFds.size(), 300);
			if (numEvent > 0)
			{
				for (size_t i = 0; i < pollFds.size(); i++)
				{
					if (pollFds[i].revents & POLLIN)
						getRequest(pollFds[i].fd);
					else if (pollFds[i].revents & POLLOUT)
						postResponse(pollFds[i].fd, i);
					else if (pollFds[i].revents & POLLERR)
						error_handle("Error occured with a connection");
				}
			}
		}
	}